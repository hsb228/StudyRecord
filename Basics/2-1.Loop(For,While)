/*루프(반복문)
//참조/p.89 ~92

-반복문에는 while,do-while,그리고 for 반복문이 있다.
-반복문은 보통은 바로 다음 한줄만 수행하고 끝나므로, 2줄 이상 출력해야 할 경우 바로 옆에 중괄호로 묶는다.*/

//for문
//-배열을 쓸 때는 for반복문이 가장 적합하다.

//예제1) - for문 기본
=================================================================
package finalnotepackage;

public class LoopNote {
	public static void main(String[] args) {
		for (int i = 0; i < 10; i++) {
			System.out.println(i);
			System.out.println(i);
		}
	}
}
=================================================================
//예제2) - 1부터 10까지의 합 구하기
package finalnotepackage;

public class ForAddSumnote {
	public static void main(String[] args) {
		int sum = 0;
		for (int i = 0; i < 11; i++) {
			sum += i;
		}
		System.out.println(sum);
	}
}
=================================================================
//에제3 - 1부터 100까지 짝수와 홀수, 그리고 총합 구하기 
<방법 1>
=================================================================
package finalnotepackage;

public class ForEOS1note {
	public static void main(String[] args) {
		int even = 0;
		int odd = 0;
		for (int i = 0; i < 101; i++) {
			if ((i % 2) == 0) {
				even += i;
			} else {
				odd += i;
			}
		}
		System.out.println(even);
		System.out.println(odd);
		int sum = even + odd;
		System.out.println(sum);
	}
}
=================================================================
<방법 2>
=================================================================
package finalnotepackage;

public class ForEOS2note {

	public static void main(String[] args) {
		int even = 0;
		int odd = 0;
		int check = 0;
		for (int i = 0; i < 101; i++) {
			check = i % 2;
			if (check == 0) {
				even += i;
			} else {
				odd += i;
			}
		}
		System.out.println(even);
		System.out.println(odd);
		int sum = even + odd;
		System.out.println(sum);
	}
}
=================================================================

//while과 while-for
-배열 외에 경우에는 대부분 이 while을 쓴다.
-while은 조건이 참일 경우에만 무한반복을 하며, 조건이 거짓이 되는 순간 바로 종료된다.
-While은 그냥 사용하면 무한반복이 되므로 반드시 탈출할 명령문이 있어야한다.

=================================================================
//예제1) - while 기본1

package finalnotepackage;

public class WhileBasicNote {

	public static void main(String[] args) {
		int i = 1;
		int sum = 0;
		while (i < 11) {
			sum += i;
			i++;
		}
		System.out.println("합:"+ sum);
	}
}
=================================================================
//예제2) - while 기본2
package objectpackage;

public class Assembly {

	public static void main(String[] args) {
		while (true) {
		System.out.println("--->");
		}
	}
}
=================================================================
//예제3 - while로 1부터 10까지의 합 구하기 
package objectpackage;

public class Assembly {
	public static void main(String[] args) {
		int sum;
		while (true) {
			int i = 1;
			sum = 0;
			while (true) {
				sum += i;
				i++;
				if (i > 10) {
					break;
			 	}
			}
			System.out.println(sum);
		}
	}
}
=================================================================
//예제4 - while문에 boolean을 활용하여 1부터 10까지의 합 구하기
package objectpackage;

public class Assembly {

	public static void main(String[] args) {
		int i,sum;
		boolean cond = true;
		i = 1;
		sum = 0;
		while (cond) {
			sum += i;
			i++;
			if (i > 10) {
				cond = false;
			}
		}
		System.out.println(sum);
	}
}
=================================================================
//예제5 - while문을 이용한 두 숫자까지의 모든 숫자 합치기

package finalnotepackage;

import java.util.Scanner;

public class Whiletwonumbersumnote {
	private static Scanner scan;

	public static void main(String[] args) {
		scan = new Scanner(System.in);
		int num1 = 0;
		int num2 = 0;
		boolean cond = true;
		while (cond) {
			if ((num1 == 999))
				cond = false;
			else {
				System.out.print("num1:");
				num1 = scan.nextInt();
				if (num1 != 999) {
					System.out.print("num2:");
					num2 = scan.nextInt();
					int sum = 0;
					for (int i = num1; i <= num2; i++) {
						sum += i;
					}
					System.out.println("sum:" + sum);
				}
				System.out.println();
			}
		}
		System.out.println("done");
	}
}
=================================================================
//예제6 - While을 이용한 두 수의 합 구하기
=================================================================
package finalnotepackage;

import java.util.Scanner;

public class Whiletwonumbersumnote {
	private static Scanner scan;

	public static void main(String[] args) {
		scan = new Scanner(System.in);
		int num1 = 0;
		int num2 = 0;
		boolean cond = true;
		while (cond) {
			if ((num1 == 999))
				cond = false;
			else {
				System.out.print("num1:");
				num1 = scan.nextInt();
				if (num1 != 999) {
					System.out.print("num2:");
					num2 = scan.nextInt();
					int sum = 0;
					for (int i = num1; i <= num2; i++) {
						sum += i;
					}
					System.out.println("sum:" + sum);
				}
				System.out.println();
			}
		}
		System.out.println("done");
	}
}
=================================================================
package finalnotepackage;

public class Whiletwonumplus {
	public int digitsum(int i, int j) {
		int sum = i + j;
		return sum;
	}
}
=================================================================
